Call addAluno_matriculado ('Barato','Candido','1999-09-09','Mocambique','Cidade de Maputo','kamubukwana','1990P717P0202C','Maputo','2018-09-12','M','Solteiro(a)',
843229480,84905811,'E_tit_u','Cidade de Maputo','kamubukwana','Jorge Dimitrov','Av. de Mocambique','45',49,1219321,'Cidade de Maputo','kamubukwana',
'Jorge Dimitrov','Av. de Mocambique','45',49,'Mario',842191892,'Cidade de Maputo','Pedreiro','Mario','Maria',842993842,8477881183,'Pedreiro','Domestica','Maputo','Cidade de maputo','10');

 
Delimiter //
Create procedure addAluno_matriculado(_apelido varchar(30),_nomes varchar(50),
_data_nascimento date,_pais_nas varchar(50),_provincia_nas varchar(50),_distrito_nas varchar(50),
_bi varchar(13),_local_emissao varchar(50),_data_em date,_sexo enum('M','F'),_estado_civil enum('Casado(a)', 'Solteiro(a)'),
_numero_tf int,_email varchar(50),
_provincia_res varchar(50),_distrito_res varchar(50),_bairro varchar(50),_av_ou_rua varchar(50),_quarteirao varchar(50),_nr_casa int,_foto blob
,_provincia_enc varchar(50),_distrito_enc varchar(50),
_bairro_enc varchar(50),_av_ou_rua_enc varchar(50),_nome_enc varchar(50),
_numero_tf_enc int,_local_trab_enc varchar(50),_profissao_enc varchar(50),_nome_pai varchar(50),_nome_mae varchar(50),
_telefone_pai int,_telefone_mae int,_profissao_pai varchar(50),_profissao_mae varchar(50),_local_trabalho_pai varchar(50),
_local_trabalho_mae varchar(50),_classe enum('8','9','10','11','12'))

Begin
	declare codp_p int; 
	declare codprov_enc int;
	declare coddist_enc int;
	declare codbairro_enc int;
	declare codEnc_enc int;	
	declare codCand_al int;
	declare codal_m int;
	declare codclass_al int;
	declare codmatr_al int;
	declare _turno enum('diurno','noctuno','a distancia');
	declare nome varchar(50);
	declare classe enum('8','9','10','11','12');
	
	Start transaction;
	Call addPessoa(_apelido,_nomes,_data_nascimento,_pais_nas,_provincia_nas,_distrito_nas,_bi,_local_emissao,
	_data_em,_sexo,_estado_civil,_numero_tf,_email,
	_provincia_res,_distrito_res,_bairro,_av_ou_rua,_quarteirao,_nr_casa,_foto);
	
	Select codp into codp_p from Pessoa where apelido=_apelido and nomes=_nomes;
	Select CONCAT(nomes,' ',apelido) into nome from pessoa where codp=codp_p;

	if(codp_p is not null) then
		Begin
			Select codprov into codprov_enc from provincia where provincia=_provincia_enc and codPais=(Select codPais from pais where pais='Mocambique');
			Select coddist into coddist_enc from distrito where codprov=codprov_enc and distrito=_distrito_enc;
			Select codbairro into codbairro_enc from bairro where coddist=coddist_enc and bairro=_bairro_enc;
			
			if(codbairro_enc is not null) then
				Begin
					Select codCand into codCand_al from Candidato_Aluno where nome_completo=nome;
					Select turno into _turno from candidato_Aluno where nome_completo=nome;
					Select classe_matricular into classe from candidato_Aluno where nome_completo=nome;
					
					if((codCand_al is not null) && (classe=_classe)) then
						Begin
							Insert into aluno (codAl,codP,turno,codCand) values (default,codP_p,_turno,codCand_al);
							Select codAl into codal_m from aluno where codP=codp_p;
							Insert into encarregado (codEnc,codAl,nome_completo,numero_telefone,local_trabalho,profissao) values (default,codal_m,_nome_enc,_numero_tf_enc,_local_trab_enc,_profissao_enc);
							Select codEnc into codEnc_enc from encarregado where codal=codal_m;
							Insert into residencia_encarregado (codRes,codEnc,codProv,codbairro,av_ou_rua) values (default,codEnc_enc,codprov_enc,codbairro_enc,_av_ou_rua_enc);
							Insert into filiacao (codFil,codAl,nome_pai,nome_mae,telefone_pai,telefone_mae,profissao_pai,profissao_mae,local_trabalho_pai,local_trabalho_mae) values (default,codal_m,_nome_pai,_nome_mae,_telefone_pai,_telefone_mae,_profissao_pai,_profissao_mae,_local_trabalho_pai,_local_trabalho_mae);
							Select codclass into codclass_al from classe where classe=_classe and turno=_turno;
							Insert into aluno_classe (codAl,codClass, ano) values (codal_m,codclass_al,year(curdate()));
							Select codMatr into codmatr_al from matricula where year(dataF)=year(curdate()) LIMIT 1;

							if((codal_m is not null) && (codclass_al is not null) && (codmatr_al is not null)) then
								Begin
									Insert into aluno_matricula (codAl,codMatr,data) values (codal_m,codmatr_al,curdate()); 
									commit;
								End;	
							else
								Begin
									Select 'Erro no codal_m, codclass_al e codmatr_al ' as Mensagem;
									rollback;
								End;

							End if;	
						End;
					else
						Begin
							Select 'Erro no codbairro_enc' as Mensagem;
							rollback;
						End;
						
					End if;			
				End;
			else
				Begin
					Select 'Erro no codRes_enc' as Mensagem;
					rollback;
				End;
			End if;
		End;	
	else	
		Begin
			Select 'Erro no codP_p' as Mensagem;
			rollback;
		End;
	End if;
End;
//














